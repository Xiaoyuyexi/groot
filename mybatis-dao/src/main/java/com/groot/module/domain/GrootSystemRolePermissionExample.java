package com.groot.module.domain;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class GrootSystemRolePermissionExample {

	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	protected String orderByClause;
	/**
	 * This field was generated by Apache iBATIS ibator. This field corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	protected List oredCriteria;

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public GrootSystemRolePermissionExample() {
		oredCriteria = new ArrayList();
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	protected GrootSystemRolePermissionExample(
			GrootSystemRolePermissionExample example) {
		this.orderByClause = example.orderByClause;
		this.oredCriteria = example.oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public List getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by Apache iBATIS ibator. This method corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public void clear() {
		oredCriteria.clear();
	}

	/**
	 * This class was generated by Apache iBATIS ibator. This class corresponds to the database table GROOT_SYSTEM_ROLE_PERMISSION
	 * @ibatorgenerated  Wed Oct 29 15:35:22 CST 2014
	 */
	public static class Criteria {
		protected List criteriaWithoutValue;
		protected List criteriaWithSingleValue;
		protected List criteriaWithListValue;
		protected List criteriaWithBetweenValue;

		protected Criteria() {
			super();
			criteriaWithoutValue = new ArrayList();
			criteriaWithSingleValue = new ArrayList();
			criteriaWithListValue = new ArrayList();
			criteriaWithBetweenValue = new ArrayList();
		}

		public boolean isValid() {
			return criteriaWithoutValue.size() > 0
					|| criteriaWithSingleValue.size() > 0
					|| criteriaWithListValue.size() > 0
					|| criteriaWithBetweenValue.size() > 0;
		}

		public List getCriteriaWithoutValue() {
			return criteriaWithoutValue;
		}

		public List getCriteriaWithSingleValue() {
			return criteriaWithSingleValue;
		}

		public List getCriteriaWithListValue() {
			return criteriaWithListValue;
		}

		public List getCriteriaWithBetweenValue() {
			return criteriaWithBetweenValue;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteriaWithoutValue.add(condition);
		}

		protected void addCriterion(String condition, Object value,
				String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property
						+ " cannot be null");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("value", value);
			criteriaWithSingleValue.add(map);
		}

		protected void addCriterion(String condition, List values,
				String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property
						+ " cannot be null or empty");
			}
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", values);
			criteriaWithListValue.add(map);
		}

		protected void addCriterion(String condition, Object value1,
				Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property
						+ " cannot be null");
			}
			List list = new ArrayList();
			list.add(value1);
			list.add(value2);
			Map map = new HashMap();
			map.put("condition", condition);
			map.put("values", list);
			criteriaWithBetweenValue.add(map);
		}

		public Criteria andIdIsNull() {
			addCriterion("ID is null");
			return this;
		}

		public Criteria andIdIsNotNull() {
			addCriterion("ID is not null");
			return this;
		}

		public Criteria andIdEqualTo(String value) {
			addCriterion("ID =", value, "id");
			return this;
		}

		public Criteria andIdNotEqualTo(String value) {
			addCriterion("ID <>", value, "id");
			return this;
		}

		public Criteria andIdGreaterThan(String value) {
			addCriterion("ID >", value, "id");
			return this;
		}

		public Criteria andIdGreaterThanOrEqualTo(String value) {
			addCriterion("ID >=", value, "id");
			return this;
		}

		public Criteria andIdLessThan(String value) {
			addCriterion("ID <", value, "id");
			return this;
		}

		public Criteria andIdLessThanOrEqualTo(String value) {
			addCriterion("ID <=", value, "id");
			return this;
		}

		public Criteria andIdLike(String value) {
			addCriterion("ID like", value, "id");
			return this;
		}

		public Criteria andIdNotLike(String value) {
			addCriterion("ID not like", value, "id");
			return this;
		}

		public Criteria andIdIn(List values) {
			addCriterion("ID in", values, "id");
			return this;
		}

		public Criteria andIdNotIn(List values) {
			addCriterion("ID not in", values, "id");
			return this;
		}

		public Criteria andIdBetween(String value1, String value2) {
			addCriterion("ID between", value1, value2, "id");
			return this;
		}

		public Criteria andIdNotBetween(String value1, String value2) {
			addCriterion("ID not between", value1, value2, "id");
			return this;
		}

		public Criteria andRoleIdIsNull() {
			addCriterion("ROLE_ID is null");
			return this;
		}

		public Criteria andRoleIdIsNotNull() {
			addCriterion("ROLE_ID is not null");
			return this;
		}

		public Criteria andRoleIdEqualTo(String value) {
			addCriterion("ROLE_ID =", value, "roleId");
			return this;
		}

		public Criteria andRoleIdNotEqualTo(String value) {
			addCriterion("ROLE_ID <>", value, "roleId");
			return this;
		}

		public Criteria andRoleIdGreaterThan(String value) {
			addCriterion("ROLE_ID >", value, "roleId");
			return this;
		}

		public Criteria andRoleIdGreaterThanOrEqualTo(String value) {
			addCriterion("ROLE_ID >=", value, "roleId");
			return this;
		}

		public Criteria andRoleIdLessThan(String value) {
			addCriterion("ROLE_ID <", value, "roleId");
			return this;
		}

		public Criteria andRoleIdLessThanOrEqualTo(String value) {
			addCriterion("ROLE_ID <=", value, "roleId");
			return this;
		}

		public Criteria andRoleIdLike(String value) {
			addCriterion("ROLE_ID like", value, "roleId");
			return this;
		}

		public Criteria andRoleIdNotLike(String value) {
			addCriterion("ROLE_ID not like", value, "roleId");
			return this;
		}

		public Criteria andRoleIdIn(List values) {
			addCriterion("ROLE_ID in", values, "roleId");
			return this;
		}

		public Criteria andRoleIdNotIn(List values) {
			addCriterion("ROLE_ID not in", values, "roleId");
			return this;
		}

		public Criteria andRoleIdBetween(String value1, String value2) {
			addCriterion("ROLE_ID between", value1, value2, "roleId");
			return this;
		}

		public Criteria andRoleIdNotBetween(String value1, String value2) {
			addCriterion("ROLE_ID not between", value1, value2, "roleId");
			return this;
		}

		public Criteria andPermissionIdIsNull() {
			addCriterion("PERMISSION_ID is null");
			return this;
		}

		public Criteria andPermissionIdIsNotNull() {
			addCriterion("PERMISSION_ID is not null");
			return this;
		}

		public Criteria andPermissionIdEqualTo(String value) {
			addCriterion("PERMISSION_ID =", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdNotEqualTo(String value) {
			addCriterion("PERMISSION_ID <>", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdGreaterThan(String value) {
			addCriterion("PERMISSION_ID >", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdGreaterThanOrEqualTo(String value) {
			addCriterion("PERMISSION_ID >=", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdLessThan(String value) {
			addCriterion("PERMISSION_ID <", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdLessThanOrEqualTo(String value) {
			addCriterion("PERMISSION_ID <=", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdLike(String value) {
			addCriterion("PERMISSION_ID like", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdNotLike(String value) {
			addCriterion("PERMISSION_ID not like", value, "permissionId");
			return this;
		}

		public Criteria andPermissionIdIn(List values) {
			addCriterion("PERMISSION_ID in", values, "permissionId");
			return this;
		}

		public Criteria andPermissionIdNotIn(List values) {
			addCriterion("PERMISSION_ID not in", values, "permissionId");
			return this;
		}

		public Criteria andPermissionIdBetween(String value1, String value2) {
			addCriterion("PERMISSION_ID between", value1, value2,
					"permissionId");
			return this;
		}

		public Criteria andPermissionIdNotBetween(String value1, String value2) {
			addCriterion("PERMISSION_ID not between", value1, value2,
					"permissionId");
			return this;
		}
	}
}